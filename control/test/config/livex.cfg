[server]
debug_mode  = 1
http_port   = 8888
http_addr   =
static_path = test/static
# For use with no cameras, disable camera, live_data, munir, and livex
adapters    = furnace, trigger, graph, metadata, livex, camera, live_data, munir, sequencer
enable_cors = true

[tornado]
logging = debug

# livex is the acquisition adapter, which communicates with others to start/stop acquisitions.
# It also handles some trigger settings to use them for odin_data settings.
[adapter.livex]
module = livex.acquisition.adapter.LiveXAdapter
# Other triggers derived their frame targets from this one. Must match a trigger adapter name
# For LiveX specifically, this needs to be the furnace for correct operation. But it can be renamed
reference_trigger = furnace
# Filepath used for munir AND furnace+metadata
filepath = /tmp


# The furnace adapter manages the furnace PLC via modbus
[adapter.furnace]
module = livex.furnace.adapter.FurnaceAdapter
# Read task is recurring value updates from the PLC. Stream task is for handling acquisition data
background_read_task_enable = 1
background_read_task_interval = 0.2
background_stream_task_enable = 1
pid_frequency = 50
# Modbus ip settings (and tcp port)
ip=192.168.0.159
port=4444
# Furnace file output and monitoring graph retention
log_directory = ./testing
log_filename = testLog.hdf5
data_groupname = 'plc_readings'
monitor_retention = 60

# furnace defaults
setpoint_default = 30.0
kp_default = 0.3
ki_default = 0.02
kd_default = 0

# Include ALL information sent via TCP in saved data, which includes additional PID information
pid_debug = 1
# Use of a mocked modbus client, exclusively for testing without a real furnace
# Mock client has all registers, but only heater A will do anything
use_mock_client = 0


# The trigger adapter manages the trigger esp32 via modbus
[adapter.trigger]
module = livex.trigger.adapter.TriggerAdapter
ip = 192.168.0.160
# Define names for the triggers being used.
# These should match e.g.: furnace, camera names, etc.
triggers = furnace, widefov, narrowfov
frequencies = 50, 80, 100
# This tasks periodically updates values from the trigger esp32
status_bg_task_enable = 1
status_bg_task_interval = 1

# Adapter for managing data for graphs
[adapter.graph]
module = livex.graph.graph_adapter.GraphAdapter
config_file = test/config/graphing.json

# Adapter for image processing from given endpoints.
[adapter.live_data]
module = livex.live_data.live_data_adapter.LiveDataAdapter
# Connections are defined by endpoints and given names for reference.
# Remove endpoint to remove connection, give each endpoint a name. Excess names are not used.
livedata_endpoint = tcp://192.168.0.33:5020, tcp://192.168.0.32:5020
endpoint_name = widefov, narrowfov
# Pixel resolution expressed as WIDTHxHEIGHT
camera_resolution = 4096x2304, 4096x2304


# Munir adapter odin_data communication
[adapter.munir]
module = munir.adapter.MunirAdapter
# Connections defined by subsystem, endpoint by making a <subsystem>_endpoints parameter.
fp_mode = 1
subsystems = 
# widefov, narrowfov
widefov_endpoints = tcp://192.168.0.33:5000
narrowfov_endpoints = tcp://192.168.0.32:5000
odin_data_config_path = test/config
# Comms timeout
ctrl_timeout = 1.0
poll_interval = 0.5
# Munir does not control liveview in LiveX
liveview_control = 0

# Adapter to manage camera connections
[adapter.camera]
module = orca_quest.adapter.OrcaAdapter
# Connections are defined by endpoint and given names as reference.
# To remove a connection, remove the endpoint. Give each a name. Excess names are not used.
camera_endpoint = tcp://192.168.0.33:9001, tcp://192.168.0.32:9001
camera_name = widefov, narrowfov

status_bg_task_enable = 1
status_bg_task_interval = 1


# Metadata adapter handles processing and writing of acquisition metadata
[adapter.metadata]
module = livex.metadata.adapter.MetadataAdapter
metadata_config = test/config/metadata.json
metadata_store = /tmp/shelf
markdown_template = test/config/templates/metadata.j2

# Sequencer adapter
[adapter.sequencer]
module = odin_sequencer.adapter.CommandSequenceManagerAdapter
sequence_location = test/config/sequences
