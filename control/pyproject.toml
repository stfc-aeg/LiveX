[build-system]
requires = ["setuptools>=64", "setuptools_scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "livex"
classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
description = "LiveX furnace control system"
dependencies = [
    "odin-control @ git+https://git@github.com/odin-detector/odin-control.git@1.5.0",
    "odin-data @ git+https://git@github.com/odin-detector/odin-data.git@1.10.1",
    "orca-quest @ git+https://git@github.com/stfc-aeg/odin-orca-quest.git",
    "munir @ git+https://github.com/stfc-aeg/munir.git",
    "sequencer @ git+https://github.com/stfc-aeg/odin-sequencer.git",
    "pymodbus===3.7.0",
    "h5py",
    "Jinja2",
    "opencv-python",
    "blosc",
    "numpy",
    "matplotlib"
]
dynamic = ["version"]
license.file = "LICENSE"
readme = "README.md"
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "black",
    "isort",
    "mypy",
    "pipdeptree",
    "pre-commit",
    "pydata-sphinx-theme>=0.12",
    "pytest",
    "pytest-cov",
    "ruff",
    "sphinx-autobuild",
    "sphinx-copybutton",
    "sphinx-design",
    "tox-direct",
    "types-mock",
]

[project.urls]
GitHub = "https://github.com/stfc-aeg/LiveX.git"

[[project.authors]] # Further authors may be added by duplicating this section
email = "mika.shearwood@stfc.ac.uk"
name = "Mika Shearwood"

[tool.setuptools_scm]
version_file = "src/livex/_version.py"
root = ".."

[tool.mypy]
ignore_missing_imports = true # Ignore missing stubs in imported modules

[tool.pytest.ini_options]
# Run pytest with all our checkers, and don't spam us with massive tracebacks on error
addopts = """
    --tb=native -vv --doctest-modules --doctest-glob="*.rst"
    """
# https://iscinumpy.gitlab.io/post/bound-version-constraints/#watch-for-warnings
#filterwarnings = "error"
# Doctest python code in docs, python code in src docstrings, test functions in tests
testpaths = "docs src tests"

[tool.coverage.run]
data_file = "/tmp/livex.coverage"

[tool.coverage.paths]
# Tests are run from installed location, map back to the src directory
source = ["src", "**/site-packages/"]

# tox must currently be configured via an embedded ini string
# See: https://github.com/tox-dev/tox/issues/999
[tool.tox]
legacy_tox_ini = """
[tox]
skipsdist=True

[testenv:{pre-commit,mypy,pytest,docs}]
# Don't create a virtualenv for the command, requires tox-direct plugin
direct = True
passenv = *
allowlist_externals =
    pytest
    pre-commit
    mypy
    sphinx-build
    sphinx-autobuild
commands =
    pytest: pytest --cov=livex --cov-report term --cov-report xml:cov.xml {posargs}
    mypy: mypy src tests {posargs}
    pre-commit: pre-commit run --all-files {posargs}
    docs: sphinx-{posargs:build -EW --keep-going} -T docs build/html
"""

[tool.ruff]
src = ["src", "tests"]
line-length = 100
lint.select = [
    "D",    # docstrings
    "D401", # docstrings require imperative mood
    "C4",   # flake8-comprehensions - https://beta.ruff.rs/docs/rules/#flake8-comprehensions-c4
    "E",    # pycodestyle errors - https://beta.ruff.rs/docs/rules/#error-e
    "F",    # pyflakes rules - https://beta.ruff.rs/docs/rules/#pyflakes-f
    "F401",
    "W",    # pycodestyle warnings - https://beta.ruff.rs/docs/rules/#warning-w
    "I001", # isort
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.black]
line-length = 100
target-version = ['py39']

[tool.isort]
profile = "black"
